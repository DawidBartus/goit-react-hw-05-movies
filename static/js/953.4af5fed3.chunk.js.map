{"version":3,"file":"static/js/953.4af5fed3.chunk.js","mappings":"4OACA,EAAqC,wCAArC,EAA8F,oC,SCEjFA,EAAc,SAAAC,GACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,EAAUH,EAAVG,MAER,OACE,eAAIC,UAAWC,EAAf,SACGF,EAAMG,KAAI,SAAAC,GACT,OACE,eAAkBH,UAAWC,EAA7B,UACE,SAAC,KAAD,CAAMG,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAMV,GAAvC,SACGM,EAAKK,SAFDL,EAAKE,GAMjB,KAGN,E,kBCnBD,EAA+B,6BAA/B,EAAwE,0BAAxE,EAA6G,yBCsD7G,EAjDe,WACb,IAAMI,GAAWC,EAAAA,EAAAA,QAAO,MACxB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOR,EAAP,KAAaS,EAAb,KACA,GAAoCD,EAAAA,EAAAA,WAAS,GAA7C,eAAOE,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,SAwBrC,OAhBAC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAa,CACf,IAAMG,EAAe,mCAAG,WAAMzB,GAAN,wFACC0B,EAAAA,EAAAA,IAAe1B,GADhB,OAChB2B,EADgB,OAEtBX,EAAQW,GAEgB,IAApBA,EAASC,OACXV,GAAc,GAEdA,GAAc,GAPM,2CAAH,sDAUrBO,EAAgBH,EACjB,CACF,GAAE,CAACA,KAGF,iBAAKlB,UAAWC,EAAhB,WACE,kBAAMwB,OAAO,SAAb,WACE,kBACEC,IAAKjB,EACLkB,KAAK,OACLtB,GAAG,QACHuB,KAAK,QACL5B,UAAWC,KAEb,mBAAQ0B,KAAK,SAASE,QAhCP,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAASvB,EAASwB,QAAQC,MAChCjB,EAAgB,CAAElB,MAAOiC,GAC1B,EA4BkDhC,UAAWC,EAAxD,yBAIDE,EAAKqB,OAAS,GAAI,SAAC7B,EAAD,CAAaI,MAAOI,KAAW,kCACjDU,GAAa,2CAAyB,OAG5C,C","sources":["webpack://goit-react-hw-05-movies/./src/components/FoundMovies/FoundMovies.module.css?716a","components/FoundMovies/FoundMovies.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"foundMovieListElem\":\"FoundMovies_foundMovieListElem__efmvU\",\"foundMovieList\":\"FoundMovies_foundMovieList__tgMMb\"};","import { Link, useLocation } from 'react-router-dom';\nimport style from './FoundMovies.module.css';\n\nexport const FoundMovies = props => {\n  const location = useLocation();\n  const { query } = props;\n\n  return (\n    <ul className={style.foundMovieList}>\n      {query.map(film => {\n        return (\n          <li key={film.id} className={style.foundMovieListElem}>\n            <Link to={`${film.id}`} state={{ from: location }}>\n              {film.title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"trendingArea\":\"Movies_trendingArea__9jQtp\",\"formInput\":\"Movies_formInput__zmXM8\",\"formBttn\":\"Movies_formBttn__hHirU\"};","import { FoundMovies } from 'components/FoundMovies/FoundMovies';\nimport { fetchWithQuery } from 'components/utils/fetchAPI';\nimport { useEffect, useRef, useState } from 'react';\nimport style from './Movies.module.css';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const inputRef = useRef(null);\n  const [film, setFilm] = useState([]);\n  const [foundMovie, setfoundMovie] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const actualQuery = searchParams.get('query');\n\n  const handleChange = e => {\n    e.preventDefault();\n    const params = inputRef.current.value;\n    setSearchParams({ query: params });\n  };\n\n  useEffect(() => {\n    if (actualQuery) {\n      const fetchQueryFilms = async props => {\n        const response = await fetchWithQuery(props);\n        setFilm(response);\n\n        if (response.length === 0) {\n          setfoundMovie(true);\n        } else {\n          setfoundMovie(false);\n        }\n      };\n      fetchQueryFilms(actualQuery);\n    }\n  }, [actualQuery]);\n\n  return (\n    <div className={style.trendingArea}>\n      <form action=\"submit\">\n        <input\n          ref={inputRef}\n          type=\"text\"\n          id=\"query\"\n          name=\"query\"\n          className={style.formInput}\n        />\n        <button type=\"submit\" onClick={handleChange} className={style.formBttn}>\n          Wyszukaj\n        </button>\n      </form>\n      {film.length > 0 ? <FoundMovies query={film} /> : <p>Try me</p>}\n      {foundMovie ? <p>Movie not found</p> : null}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["FoundMovies","props","location","useLocation","query","className","style","map","film","to","id","state","from","title","inputRef","useRef","useState","setFilm","foundMovie","setfoundMovie","useSearchParams","searchParams","setSearchParams","actualQuery","get","useEffect","fetchQueryFilms","fetchWithQuery","response","length","action","ref","type","name","onClick","e","preventDefault","params","current","value"],"sourceRoot":""}